[LVL9] Output level: 9
[INFO] Random seed: 0.25189132671
[INFO] Computing scores: 0.0731s
[INFO] Number of examples (M): 120
[INFO] Positive weight (P): 6.0000
[INFO] Negative weight (N): 114.0000
[DEBUG] Best rule so far: rall64(A,B) :- true [0.0]
[DEBUG] Candidates for iteration 1:
[DEBUG] ==================================
[DEBUG] rall64(A,B) :- true 0.0
[DEBUG] ==================================
[LVL9] rall64(A,B) :- all64(B,C) 0.065625 (1.0, 14.0, 100.0, 5.0) 0.525 [ACCEPT]
[LVL9] BETTER RULE rall64(A,B) :- all64(B,C) (0.065625, 1.0) > (0.0, 6.0)
[LVL9] rall64(A,B) :- all64(C,A) 0.128125 (2.0, 13.0, 101.0, 4.0) 0.683333333333 [ACCEPT]
[LVL9] BETTER RULE rall64(A,B) :- all64(C,A) (0.128125, 2.0) > (0.065625, 1.0)
[LVL9] rall64(A,B) :- all64(C,B) 0.128125 (2.0, 13.0, 101.0, 4.0) 0.683333333333 [ACCEPT]
[LVL9] rall64(A,B) :- some64(A,C) 0.0617647058824 (1.0, 15.0, 99.0, 5.0) 0.525 [ACCEPT]
[LVL9] rall64(A,B) :- some64(C,B) 0.075 (1.0, 12.0, 102.0, 5.0) 0.525 [ACCEPT]
[LVL9] rall64(A,B) :- no64(B,C) 0.120588235294 (2.0, 14.0, 100.0, 4.0) 0.683333333333 [ACCEPT]
[LVL9] rall64(A,B) :- no64(C,A) 0.203333333333 (3.0, 11.0, 103.0, 3.0) 0.7625 [ACCEPT]
[LVL9] BETTER RULE rall64(A,B) :- no64(C,A) (0.2033333333333333, 3.0) > (0.128125, 2.0)
[DEBUG] Best rule so far: rall64(A,B) :- no64(C,A) [0.203333333333]
[DEBUG] Candidates for iteration 2:
[DEBUG] ==================================
[DEBUG] rall64(A,B) :- no64(C,A) 0.203333333333
[DEBUG] rall64(A,B) :- all64(C,A) 0.128125
[DEBUG] rall64(A,B) :- all64(C,B) 0.128125
[DEBUG] rall64(A,B) :- no64(B,C) 0.120588235294
[DEBUG] rall64(A,B) :- some64(C,B) 0.075
[DEBUG] rall64(A,B) :- all64(B,C) 0.065625
[DEBUG] rall64(A,B) :- some64(A,C) 0.0617647058824
[DEBUG] ==================================
[LVL9] rall64(A,B) :- no64(C,A), all64(C,B) 0.35 (1.0, 1.0, 113.0, 5.0) 0.525 [ACCEPT]
[LVL9] BETTER RULE rall64(A,B) :- no64(C,A), all64(C,B) (0.35000000000000003, 1.0) > (0.2033333333333333, 3.0)
[LVL9] rall64(A,B) :- no64(C,A), all64(B,C) 0.35 (1.0, 1.0, 113.0, 5.0) 0.525 [ACCEPT]
[LVL9] rall64(A,B) :- no64(C,A), all64(C,D) 0.35 (1.0, 1.0, 113.0, 5.0) 0.525 [ACCEPT]
[LVL9] rall64(A,B) :- no64(C,A), all64(B,D) 0.35 (1.0, 1.0, 113.0, 5.0) 0.525 [ACCEPT]
[LVL9] rall64(A,B) :- no64(C,A), all64(D,C) 0.35 (1.0, 1.0, 113.0, 5.0) 0.525 [ACCEPT]
[LVL9] rall64(A,B) :- no64(C,A), all64(D,B) 0.35 (1.0, 1.0, 113.0, 5.0) 0.525 [ACCEPT]
[LVL9] rall64(A,B) :- no64(C,A), some64(C,B) 0.525 (1.0, 0.0, 114.0, 5.0) 0.525 [REJECT* fp] 0.0
[LVL9] BETTER RULE rall64(A,B) :- no64(C,A), some64(C,B) (0.525, 1.0) > (0.35000000000000003, 1.0)
[LVL9] rall64(A,B) :- no64(C,A), \+all64(C,B) 0.157692307692 (2.0, 10.0, 104.0, 4.0) 0.683333333333 [ACCEPT]
[LVL9] rall64(A,B) :- no64(C,A), \+all64(B,C) 0.157692307692 (2.0, 10.0, 104.0, 4.0) 0.683333333333 [ACCEPT]
[LVL9] rall64(A,B) :- no64(C,A), \+some64(B,C) 0.234615384615 (3.0, 9.0, 105.0, 3.0) 0.7625 [ACCEPT]
[LVL9] rall64(A,B) :- no64(C,A), \+no64(C,B) 0.234615384615 (3.0, 9.0, 105.0, 3.0) 0.7625 [ACCEPT]
[LVL9] rall64(A,B) :- no64(C,A), \+no64(B,C) 0.234615384615 (3.0, 9.0, 105.0, 3.0) 0.7625 [ACCEPT]
[LVL9] rall64(A,B) :- no64(C,A), \+somenot64(C,B) 0.234615384615 (3.0, 9.0, 105.0, 3.0) 0.7625 [ACCEPT]
[LVL9] rall64(A,B) :- no64(C,A), \+somenot64(B,C) 0.217857142857 (3.0, 10.0, 104.0, 3.0) 0.7625 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,A), \+all64(B,C) 0.136666666667 (2.0, 12.0, 102.0, 4.0) 0.683333333333 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,A), \+some64(C,B) 0.146428571429 (2.0, 11.0, 103.0, 4.0) 0.683333333333 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,A), \+some64(B,C) 0.146428571429 (2.0, 11.0, 103.0, 4.0) 0.683333333333 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,A), \+no64(C,B) 0.146428571429 (2.0, 11.0, 103.0, 4.0) 0.683333333333 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,A), \+somenot64(C,B) 0.146428571429 (2.0, 11.0, 103.0, 4.0) 0.683333333333 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,A), \+somenot64(B,C) 0.146428571429 (2.0, 11.0, 103.0, 4.0) 0.683333333333 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,B), \+all64(A,C) 0.136666666667 (2.0, 12.0, 102.0, 4.0) 0.683333333333 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,B), \+some64(A,C) 0.146428571429 (2.0, 11.0, 103.0, 4.0) 0.683333333333 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,B), \+some64(C,A) 0.146428571429 (2.0, 11.0, 103.0, 4.0) 0.683333333333 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,B), \+no64(A,C) 0.146428571429 (2.0, 11.0, 103.0, 4.0) 0.683333333333 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,B), \+somenot64(A,C) 0.146428571429 (2.0, 11.0, 103.0, 4.0) 0.683333333333 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,B), \+somenot64(C,A) 0.146428571429 (2.0, 11.0, 103.0, 4.0) 0.683333333333 [ACCEPT]
[LVL9] rall64(A,B) :- no64(B,C), \+all64(A,C) 0.136666666667 (2.0, 12.0, 102.0, 4.0) 0.683333333333 [ACCEPT]
[LVL9] rall64(A,B) :- no64(B,C), \+some64(C,A) 0.136666666667 (2.0, 12.0, 102.0, 4.0) 0.683333333333 [ACCEPT]
[LVL9] rall64(A,B) :- no64(B,C), \+no64(A,C) 0.136666666667 (2.0, 12.0, 102.0, 4.0) 0.683333333333 [ACCEPT]
[LVL9] rall64(A,B) :- no64(B,C), \+no64(C,A) 0.136666666667 (2.0, 12.0, 102.0, 4.0) 0.683333333333 [ACCEPT]
[LVL9] rall64(A,B) :- no64(B,C), \+somenot64(A,C) 0.136666666667 (2.0, 12.0, 102.0, 4.0) 0.683333333333 [ACCEPT]
[LVL9] rall64(A,B) :- no64(B,C), \+somenot64(C,A) 0.136666666667 (2.0, 12.0, 102.0, 4.0) 0.683333333333 [ACCEPT]
[DEBUG] Best rule so far: rall64(A,B) :- no64(C,A), some64(C,B) [0.525]
[DEBUG] Candidates for iteration 3:
[DEBUG] ==================================
[DEBUG] rall64(A,B) :- no64(C,A), all64(C,B) 0.35
[DEBUG] rall64(A,B) :- no64(C,A), all64(B,C) 0.35
[DEBUG] rall64(A,B) :- no64(C,A), all64(C,D) 0.35
[DEBUG] rall64(A,B) :- no64(C,A), all64(B,D) 0.35
[DEBUG] rall64(A,B) :- no64(C,A), all64(D,C) 0.35
[DEBUG] rall64(A,B) :- no64(C,A), all64(D,B) 0.35
[DEBUG] rall64(A,B) :- no64(C,A), \+some64(B,C) 0.234615384615
[DEBUG] rall64(A,B) :- no64(C,A), \+no64(C,B) 0.234615384615
[DEBUG] rall64(A,B) :- no64(C,A), \+no64(B,C) 0.234615384615
[DEBUG] rall64(A,B) :- no64(C,A), \+somenot64(C,B) 0.234615384615
[DEBUG] rall64(A,B) :- no64(C,A), \+somenot64(B,C) 0.217857142857
[DEBUG] rall64(A,B) :- no64(C,A), \+all64(C,B) 0.157692307692
[DEBUG] rall64(A,B) :- no64(C,A), \+all64(B,C) 0.157692307692
[DEBUG] rall64(A,B) :- all64(C,A), \+some64(C,B) 0.146428571429
[DEBUG] rall64(A,B) :- all64(C,A), \+some64(B,C) 0.146428571429
[DEBUG] rall64(A,B) :- all64(C,A), \+no64(C,B) 0.146428571429
[DEBUG] rall64(A,B) :- all64(C,A), \+somenot64(C,B) 0.146428571429
[DEBUG] rall64(A,B) :- all64(C,A), \+somenot64(B,C) 0.146428571429
[DEBUG] rall64(A,B) :- all64(C,B), \+some64(A,C) 0.146428571429
[DEBUG] rall64(A,B) :- all64(C,B), \+some64(C,A) 0.146428571429
[DEBUG] rall64(A,B) :- all64(C,B), \+no64(A,C) 0.146428571429
[DEBUG] rall64(A,B) :- all64(C,B), \+somenot64(A,C) 0.146428571429
[DEBUG] rall64(A,B) :- all64(C,B), \+somenot64(C,A) 0.146428571429
[DEBUG] rall64(A,B) :- all64(C,A), \+all64(B,C) 0.136666666667
[DEBUG] rall64(A,B) :- all64(C,B), \+all64(A,C) 0.136666666667
[DEBUG] rall64(A,B) :- no64(B,C), \+all64(A,C) 0.136666666667
[DEBUG] rall64(A,B) :- no64(B,C), \+some64(C,A) 0.136666666667
[DEBUG] rall64(A,B) :- no64(B,C), \+no64(A,C) 0.136666666667
[DEBUG] rall64(A,B) :- no64(B,C), \+no64(C,A) 0.136666666667
[DEBUG] rall64(A,B) :- no64(B,C), \+somenot64(A,C) 0.136666666667
[DEBUG] rall64(A,B) :- no64(B,C), \+somenot64(C,A) 0.136666666667
[DEBUG] ==================================
[INFO] RULE LEARNED: rall64(A,B) :- no64(C,A), some64(C,B) 0.958333333333
[DEBUG] Best rule so far: rall64(A,B) :- true [0.0]
[DEBUG] Candidates for iteration 1:
[DEBUG] ==================================
[DEBUG] rall64(A,B) :- true 0.0
[DEBUG] ==================================
[LVL9] rall64(A,B) :- all64(B,C) 0.0651260504202 (2.0, 14.0, 100.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] BETTER RULE rall64(A,B) :- all64(B,C) (0.06512605042016807, 2.0) > (0.0, 6.0)
[LVL9] rall64(A,B) :- all64(C,A) 0.12762605042 (3.0, 13.0, 101.0, 3.0) 0.680672268908 [ACCEPT]
[LVL9] BETTER RULE rall64(A,B) :- all64(C,A) (0.12762605042016806, 3.0) > (0.06512605042016807, 2.0)
[LVL9] rall64(A,B) :- all64(C,B) 0.12762605042 (3.0, 13.0, 101.0, 3.0) 0.680672268908 [ACCEPT]
[LVL9] rall64(A,B) :- some64(A,C) 0.0612951062778 (2.0, 15.0, 99.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- no64(B,C) 0.12011863569 (3.0, 14.0, 100.0, 3.0) 0.680672268908 [ACCEPT]
[LVL9] rall64(A,B) :- no64(C,A) 0.145858343337 (3.0, 11.0, 103.0, 3.0) 0.680672268908 [ACCEPT]
[LVL9] BETTER RULE rall64(A,B) :- no64(C,A) (0.1458583433373349, 3.0) > (0.12762605042016806, 3.0)
[DEBUG] Best rule so far: rall64(A,B) :- no64(C,A) [0.145858343337]
[DEBUG] Candidates for iteration 2:
[DEBUG] ==================================
[DEBUG] rall64(A,B) :- no64(C,A) 0.145858343337
[DEBUG] rall64(A,B) :- all64(C,A) 0.12762605042
[DEBUG] rall64(A,B) :- all64(C,B) 0.12762605042
[DEBUG] rall64(A,B) :- no64(B,C) 0.12011863569
[DEBUG] rall64(A,B) :- all64(B,C) 0.0651260504202
[DEBUG] rall64(A,B) :- some64(A,C) 0.0612951062778
[DEBUG] ==================================
[LVL9] rall64(A,B) :- no64(C,A), all64(C,B) 0.347338935574 (2.0, 1.0, 113.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] BETTER RULE rall64(A,B) :- no64(C,A), all64(C,B) (0.34733893557422973, 2.0) > (0.1458583433373349, 3.0)
[LVL9] rall64(A,B) :- no64(C,A), all64(B,C) 0.347338935574 (2.0, 1.0, 113.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- no64(C,A), all64(C,D) 0.347338935574 (2.0, 1.0, 113.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- no64(C,A), all64(B,D) 0.347338935574 (2.0, 1.0, 113.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- no64(C,A), all64(D,C) 0.347338935574 (2.0, 1.0, 113.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- no64(C,A), all64(D,B) 0.347338935574 (2.0, 1.0, 113.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- no64(C,A), \+all64(C,B) 0.0868347338936 (2.0, 10.0, 104.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- no64(C,A), \+all64(B,C) 0.0868347338936 (2.0, 10.0, 104.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- no64(C,A), \+some64(B,C) 0.170168067227 (3.0, 9.0, 105.0, 3.0) 0.680672268908 [ACCEPT]
[LVL9] rall64(A,B) :- no64(C,A), \+no64(C,B) 0.170168067227 (3.0, 9.0, 105.0, 3.0) 0.680672268908 [ACCEPT]
[LVL9] rall64(A,B) :- no64(C,A), \+no64(B,C) 0.170168067227 (3.0, 9.0, 105.0, 3.0) 0.680672268908 [ACCEPT]
[LVL9] rall64(A,B) :- no64(C,A), \+somenot64(C,B) 0.170168067227 (3.0, 9.0, 105.0, 3.0) 0.680672268908 [ACCEPT]
[LVL9] rall64(A,B) :- no64(C,A), \+somenot64(B,C) 0.157078215902 (3.0, 10.0, 104.0, 3.0) 0.680672268908 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,A), all64(C,B) 0.347338935574 (2.0, 1.0, 113.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,A), all64(D,B) 0.347338935574 (2.0, 1.0, 113.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,A), no64(B,C) 0.347338935574 (2.0, 1.0, 113.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,A), no64(B,D) 0.347338935574 (2.0, 1.0, 113.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,A), no64(D,C) 0.347338935574 (2.0, 1.0, 113.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,A), \+all64(C,B) 0.0744297719088 (2.0, 12.0, 102.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,A), \+all64(B,C) 0.136134453782 (3.0, 12.0, 102.0, 3.0) 0.680672268908 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,A), \+some64(C,B) 0.145858343337 (3.0, 11.0, 103.0, 3.0) 0.680672268908 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,A), \+some64(B,C) 0.145858343337 (3.0, 11.0, 103.0, 3.0) 0.680672268908 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,A), \+no64(C,B) 0.145858343337 (3.0, 11.0, 103.0, 3.0) 0.680672268908 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,A), \+no64(B,C) 0.0744297719088 (2.0, 12.0, 102.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,A), \+somenot64(C,B) 0.145858343337 (3.0, 11.0, 103.0, 3.0) 0.680672268908 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,A), \+somenot64(B,C) 0.145858343337 (3.0, 11.0, 103.0, 3.0) 0.680672268908 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,B), all64(D,A) 0.347338935574 (2.0, 1.0, 113.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,B), no64(C,D) 0.347338935574 (2.0, 1.0, 113.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,B), no64(D,A) 0.347338935574 (2.0, 1.0, 113.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,B), \+all64(A,C) 0.136134453782 (3.0, 12.0, 102.0, 3.0) 0.680672268908 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,B), \+all64(C,A) 0.0744297719088 (2.0, 12.0, 102.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,B), \+some64(A,C) 0.145858343337 (3.0, 11.0, 103.0, 3.0) 0.680672268908 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,B), \+some64(C,A) 0.145858343337 (3.0, 11.0, 103.0, 3.0) 0.680672268908 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,B), \+no64(A,C) 0.145858343337 (3.0, 11.0, 103.0, 3.0) 0.680672268908 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,B), \+no64(C,A) 0.0744297719088 (2.0, 12.0, 102.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,B), \+somenot64(A,C) 0.145858343337 (3.0, 11.0, 103.0, 3.0) 0.680672268908 [ACCEPT]
[LVL9] rall64(A,B) :- all64(C,B), \+somenot64(C,A) 0.145858343337 (3.0, 11.0, 103.0, 3.0) 0.680672268908 [ACCEPT]
[LVL9] rall64(A,B) :- no64(B,C), all64(C,D) 0.347338935574 (2.0, 1.0, 113.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- no64(B,C), all64(D,A) 0.347338935574 (2.0, 1.0, 113.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- no64(B,C), some64(A,C) 0.347338935574 (2.0, 1.0, 113.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- no64(B,C), some64(A,D) 0.347338935574 (2.0, 1.0, 113.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- no64(B,C), some64(D,C) 0.347338935574 (2.0, 1.0, 113.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- no64(B,C), \+all64(A,C) 0.136134453782 (3.0, 12.0, 102.0, 3.0) 0.680672268908 [ACCEPT]
[LVL9] rall64(A,B) :- no64(B,C), \+all64(C,A) 0.0694677871148 (2.0, 13.0, 101.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- no64(B,C), \+some64(A,C) 0.0694677871148 (2.0, 13.0, 101.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- no64(B,C), \+some64(C,A) 0.136134453782 (3.0, 12.0, 102.0, 3.0) 0.680672268908 [ACCEPT]
[LVL9] rall64(A,B) :- no64(B,C), \+no64(A,C) 0.136134453782 (3.0, 12.0, 102.0, 3.0) 0.680672268908 [ACCEPT]
[LVL9] rall64(A,B) :- no64(B,C), \+no64(C,A) 0.136134453782 (3.0, 12.0, 102.0, 3.0) 0.680672268908 [ACCEPT]
[LVL9] rall64(A,B) :- no64(B,C), \+somenot64(A,C) 0.136134453782 (3.0, 12.0, 102.0, 3.0) 0.680672268908 [ACCEPT]
[LVL9] rall64(A,B) :- no64(B,C), \+somenot64(C,A) 0.136134453782 (3.0, 12.0, 102.0, 3.0) 0.680672268908 [ACCEPT]
[LVL9] rall64(A,B) :- all64(B,C), no64(C,D) 0.347338935574 (2.0, 1.0, 113.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- all64(B,C), no64(D,A) 0.347338935574 (2.0, 1.0, 113.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- all64(B,C), \+all64(A,C) 0.0744297719088 (2.0, 12.0, 102.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- all64(B,C), \+all64(C,A) 0.0694677871148 (2.0, 13.0, 101.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- all64(B,C), \+some64(A,C) 0.0744297719088 (2.0, 12.0, 102.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- all64(B,C), \+some64(C,A) 0.0744297719088 (2.0, 12.0, 102.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- all64(B,C), \+no64(A,C) 0.0744297719088 (2.0, 12.0, 102.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- all64(B,C), \+somenot64(A,C) 0.0744297719088 (2.0, 12.0, 102.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- all64(B,C), \+somenot64(C,A) 0.0744297719088 (2.0, 12.0, 102.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- some64(A,C), no64(B,D) 0.347338935574 (2.0, 1.0, 113.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- some64(A,C), no64(D,C) 0.347338935574 (2.0, 1.0, 113.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- some64(A,C), \+all64(C,B) 0.0694677871148 (2.0, 13.0, 101.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- some64(A,C), \+all64(B,C) 0.0694677871148 (2.0, 13.0, 101.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- some64(A,C), \+some64(C,B) 0.0694677871148 (2.0, 13.0, 101.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- some64(A,C), \+some64(B,C) 0.0694677871148 (2.0, 13.0, 101.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- some64(A,C), \+no64(C,B) 0.0694677871148 (2.0, 13.0, 101.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- some64(A,C), \+somenot64(C,B) 0.0694677871148 (2.0, 13.0, 101.0, 4.0) 0.521008403361 [ACCEPT]
[LVL9] rall64(A,B) :- some64(A,C), \+somenot64(B,C) 0.0694677871148 (2.0, 13.0, 101.0, 4.0) 0.521008403361 [ACCEPT]
[DEBUG] Best rule so far: rall64(A,B) :- no64(C,A), all64(C,B) [0.347338935574]
[DEBUG] Candidates for iteration 3:
[DEBUG] ==================================
[DEBUG] rall64(A,B) :- no64(C,A), all64(C,B) 0.347338935574
[DEBUG] rall64(A,B) :- no64(C,A), all64(B,C) 0.347338935574
[DEBUG] rall64(A,B) :- no64(C,A), all64(C,D) 0.347338935574
[DEBUG] rall64(A,B) :- no64(C,A), all64(B,D) 0.347338935574
[DEBUG] rall64(A,B) :- no64(C,A), all64(D,C) 0.347338935574
[DEBUG] rall64(A,B) :- no64(C,A), all64(D,B) 0.347338935574
[DEBUG] rall64(A,B) :- all64(C,A), all64(C,B) 0.347338935574
[DEBUG] rall64(A,B) :- all64(C,A), all64(D,B) 0.347338935574
[DEBUG] rall64(A,B) :- all64(C,A), no64(B,C) 0.347338935574
[DEBUG] rall64(A,B) :- all64(C,A), no64(B,D) 0.347338935574
[DEBUG] rall64(A,B) :- all64(C,A), no64(D,C) 0.347338935574
[DEBUG] rall64(A,B) :- all64(C,B), all64(D,A) 0.347338935574
[DEBUG] rall64(A,B) :- all64(C,B), no64(C,D) 0.347338935574
[DEBUG] rall64(A,B) :- all64(C,B), no64(D,A) 0.347338935574
[DEBUG] rall64(A,B) :- no64(B,C), all64(C,D) 0.347338935574
[DEBUG] rall64(A,B) :- no64(B,C), all64(D,A) 0.347338935574
[DEBUG] rall64(A,B) :- no64(B,C), some64(A,C) 0.347338935574
[DEBUG] rall64(A,B) :- no64(B,C), some64(A,D) 0.347338935574
[DEBUG] rall64(A,B) :- no64(B,C), some64(D,C) 0.347338935574
[DEBUG] rall64(A,B) :- all64(B,C), no64(C,D) 0.347338935574
[DEBUG] rall64(A,B) :- all64(B,C), no64(D,A) 0.347338935574
[DEBUG] rall64(A,B) :- some64(A,C), no64(B,D) 0.347338935574
[DEBUG] rall64(A,B) :- some64(A,C), no64(D,C) 0.347338935574
[DEBUG] rall64(A,B) :- no64(C,A), \+some64(B,C) 0.170168067227
[DEBUG] rall64(A,B) :- no64(C,A), \+no64(C,B) 0.170168067227
[DEBUG] rall64(A,B) :- no64(C,A), \+no64(B,C) 0.170168067227
[DEBUG] rall64(A,B) :- no64(C,A), \+somenot64(C,B) 0.170168067227
[DEBUG] rall64(A,B) :- no64(C,A), \+somenot64(B,C) 0.157078215902
[DEBUG] rall64(A,B) :- all64(C,A), \+some64(C,B) 0.145858343337
[DEBUG] rall64(A,B) :- all64(C,A), \+some64(B,C) 0.145858343337
[DEBUG] rall64(A,B) :- all64(C,A), \+no64(C,B) 0.145858343337
[DEBUG] rall64(A,B) :- all64(C,A), \+somenot64(C,B) 0.145858343337
[DEBUG] rall64(A,B) :- all64(C,A), \+somenot64(B,C) 0.145858343337
[DEBUG] rall64(A,B) :- all64(C,B), \+some64(A,C) 0.145858343337
[DEBUG] rall64(A,B) :- all64(C,B), \+some64(C,A) 0.145858343337
[DEBUG] rall64(A,B) :- all64(C,B), \+no64(A,C) 0.145858343337
[DEBUG] rall64(A,B) :- all64(C,B), \+somenot64(A,C) 0.145858343337
[DEBUG] rall64(A,B) :- all64(C,B), \+somenot64(C,A) 0.145858343337
[DEBUG] rall64(A,B) :- all64(C,A), \+all64(B,C) 0.136134453782
[DEBUG] rall64(A,B) :- all64(C,B), \+all64(A,C) 0.136134453782
[DEBUG] rall64(A,B) :- no64(B,C), \+all64(A,C) 0.136134453782
[DEBUG] rall64(A,B) :- no64(B,C), \+some64(C,A) 0.136134453782
[DEBUG] rall64(A,B) :- no64(B,C), \+no64(A,C) 0.136134453782
[DEBUG] rall64(A,B) :- no64(B,C), \+no64(C,A) 0.136134453782
[DEBUG] rall64(A,B) :- no64(B,C), \+somenot64(A,C) 0.136134453782
[DEBUG] rall64(A,B) :- no64(B,C), \+somenot64(C,A) 0.136134453782
[DEBUG] rall64(A,B) :- no64(C,A), \+all64(C,B) 0.0868347338936
[DEBUG] rall64(A,B) :- no64(C,A), \+all64(B,C) 0.0868347338936
[DEBUG] rall64(A,B) :- all64(C,A), \+all64(C,B) 0.0744297719088
[DEBUG] rall64(A,B) :- all64(C,A), \+no64(B,C) 0.0744297719088
[DEBUG] rall64(A,B) :- all64(C,B), \+all64(C,A) 0.0744297719088
[DEBUG] rall64(A,B) :- all64(C,B), \+no64(C,A) 0.0744297719088
[DEBUG] rall64(A,B) :- all64(B,C), \+all64(A,C) 0.0744297719088
[DEBUG] rall64(A,B) :- all64(B,C), \+some64(A,C) 0.0744297719088
[DEBUG] rall64(A,B) :- all64(B,C), \+some64(C,A) 0.0744297719088
[DEBUG] rall64(A,B) :- all64(B,C), \+no64(A,C) 0.0744297719088
[DEBUG] rall64(A,B) :- all64(B,C), \+somenot64(A,C) 0.0744297719088
[DEBUG] rall64(A,B) :- all64(B,C), \+somenot64(C,A) 0.0744297719088
[DEBUG] rall64(A,B) :- no64(B,C), \+all64(C,A) 0.0694677871148
[DEBUG] rall64(A,B) :- no64(B,C), \+some64(A,C) 0.0694677871148
[DEBUG] rall64(A,B) :- all64(B,C), \+all64(C,A) 0.0694677871148
[DEBUG] rall64(A,B) :- some64(A,C), \+all64(C,B) 0.0694677871148
[DEBUG] rall64(A,B) :- some64(A,C), \+all64(B,C) 0.0694677871148
[DEBUG] rall64(A,B) :- some64(A,C), \+some64(C,B) 0.0694677871148
[DEBUG] rall64(A,B) :- some64(A,C), \+some64(B,C) 0.0694677871148
[DEBUG] rall64(A,B) :- some64(A,C), \+no64(C,B) 0.0694677871148
[DEBUG] rall64(A,B) :- some64(A,C), \+somenot64(C,B) 0.0694677871148
[DEBUG] rall64(A,B) :- some64(A,C), \+somenot64(B,C) 0.0694677871148
[DEBUG] ==================================
[INFO] RULE LEARNED: rall64(A,B) :- no64(C,A), all64(C,B) 0.958333333333
